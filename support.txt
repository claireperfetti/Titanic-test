#Heroku deployment support file
#These steps are only needed if you need to check your API on your computer
$ pip install pipenv 
$ pipenv --three
$ pipenv shell
$ pipenv install pandas numpy flask marshmallow-sqlalchemy flask-sqlalchemy psycopg2-binary flask-migrate flask-script flask-marshmallow sklearn flask-bcrypt pyjwt
######Heroku
#create a new app on heroku website
#create a database in /Ressources, type Heroku-postgres in the Adds-on bar, and validate it
#Database url is in /Settings , click on Reveal Config Vars button, and copy the url

#create a new database on Heroku (better for compatibility, you can do it later) and run the db creation file
$ python create_db.py
#otherwise use previous database url in app.py
#for instance, my local one: url = 'postgres://claire:user@localhost:5432/titanic'
# update db url in app.py if you create a new one (if create with heroku, use the environment variable instead of postgres address)
# update environment variables envvar.envrc:(good practive but not necessary)
DATABASE_URL='heroku database url'

######docker
#if not created, create a requirements.txt file
$pip freeze > requirements.txt.
#create a Dockerfile in root repository and update the file/folder name
EXPOSE 5000 #if you want first to test it locally
EXPOSE $PORT  #if running on Heroku
#update app.py # Run Server
if __name__ == '__main__':
    app.run(debug=True) # if running locally
    app.run(host='0.0.0.0', port=os.environ['PORT']) #if running on Heroku
    
#build the container (it should be rebuilt each time you make a modification in your files)
$ sudo docker build .
#check container id
$ sudo docker images
#To run your container locally, use the command and update the container id
$ sudo docker run -p 5000:5000 349939a05a3d
#Login to heroku from CLI in needed before to proceed to pushing container on Heroku
#log with your heroku email and pwd
$ sudo heroku login
$ sudo heroku login -i #for me necessary
$ sudo heroku container:login
#check container id
$ sudo docker images
#copy the containter id and paste it in here:
#update tag to properly name your container:docker tag <image> registry.heroku.com/<app>/<process-type>
$ sudo docker tag a6b5c4af8d83 registry.heroku.com/app_name/web:latest
#check tag
$ sudo docker images
#push existing image on heroku repository: docker push registry.heroku.com/<app>/<process-type>
$ sudo docker push registry.heroku.com/titanic-api-claire/web:latest
#release application
$ sudo heroku container:release web -a titanic-api-claire
#check heroku: add a get route (for me /train or /data) to check your application is working
#Check on postman: run the app.py, open your browser, copy the heroku address and make your prediction



